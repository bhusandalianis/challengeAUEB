package askhseis;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;


public class NumberGameFinal {

    public static void main(String[] args) throws FileNotFoundException {

        File inFile = new File("/home/bhusan/Documents/factory outl/εργοστάσιοκώδξ/κώδιξ/java/eksadesPrin");
        File outFile = new File("/home/bhusan/Documents/factory outl/εργοστάσιοκώδξ/κώδιξ/java/newOut");

        Scanner in = new Scanner(inFile);
        PrintStream ps = new PrintStream(outFile);
        int n=6;
        int[] row = new int[6];
        ArrayList<Integer> eksadas = new ArrayList<>();

        while (in.hasNextInt()){
            eksadas.add(in.nextInt());
        }
        Collections.sort(eksadas);

        System.out.println(eksadas.toString());

        for (int k = 0; k <= eksadas.size()-n; k++) {
            for (int l = k+1; l <= eksadas.size()-n+1; l++) {
                for (int m = l+1; m <= eksadas.size()-n+2; m++) {
                    for (int o = m+1; o <= eksadas.size()-n+3; o++) {
                        for (int p = o+1; p <= eksadas.size()-n+4; p++) {
                            for (int h = p+1; h < eksadas.size(); h++)    {
                                row[0] = eksadas.get(k);
                                row[1] = eksadas.get(l);
                                row[2] = eksadas.get(m);
                                row[3] = eksadas.get(o);
                                row[4] = eksadas.get(p);
                                row[5] = eksadas.get(h);

                                if ((!isEven(row)) && !isOdd(row) && (!isContinuous(row)) && (!isSameEnding(row)) && (!isSameTen(row))) {
                                    ps.println(row[0] + " "+row[1]+" "+row[2]+" "+ row[3]+" "+row[4]+" "+ row[5]);
                                    ps.printf("%d\t%d\t%d\t%d\t%d\t%d\n", eksadas.get(k), eksadas.get(l), eksadas.get(m), eksadas.get(o),eksadas.get(p),eksadas.get(h));

                                }
                            }
                        }
                    }
                }
            }
        }
    }


    public static boolean isEven(int[] arr){
        boolean even = false;
        int count = 0;

        for(int item: arr){
            if(item%2 ==0){
                count++;
            }
        }
        if (count>4){
            even=true;
        }
        return even;
    }

    public static boolean isOdd(int[] arr){
        boolean odd = false;
        int count = 0;

        for(int item: arr){
            if(item%2 !=0){
                count++;
            }
        }
        if (count>4){
            odd=true;
        }
        return odd;
    }

    public static boolean isContinuous(int[] arr){
        boolean continuous = false;
        int count =0;
        for(int i=1;i<arr.length-1;i++){
            if(Math.abs(arr[i]-arr[i+1])==1){
                count++;
            }
            if(Math.abs(arr[i]-arr[i-1])==1){
                count++;
            }
        }
        if(count<3){
            continuous=true;
        }
        return continuous;

    }

    public static boolean isSameTen(int[] arr){
        boolean same=false;
        int count=0;

        for(int i=0;i<=arr.length-1; i++){
            for(int j=0;j<=i;j++){
                if(arr[i]/10==arr[j]/10){
                    count++;
                }
            }
        }
        if(count>=4){
            same = true;
        }
        return same;
    }

    public static boolean isSameEnding(int[] arr){
        boolean same=false;
        int count=0;

        for(int i=0;i<=arr.length-1; i++){
            for(int j=0;j<=i;j++){
                if(arr[i]%10==arr[j]%10){
                    count++;
                }
            }
        }
        if(count>=4){
            same = true;
        }
        return same;
    }
}
